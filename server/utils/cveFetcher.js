
const axios = require("axios");
const CVE = require("../models/cveModel");
const cleanseCveData = require("./cleanseCveData");

const NVD_API_URL = "https://services.nvd.nist.gov/rest/json/cves/2.0";
const RESULTS_PER_PAGE = 2000;

async function fetchCveDataChunked(startIndex = 0) {
  try {
    const response = await axios.get(NVD_API_URL, {
      params: {
        startIndex: startIndex,
        resultsPerPage: RESULTS_PER_PAGE,
      },
    });

    const cveItems = response?.data?.vulnerabilities || [];
    const totalCount = response?.data?.totalResults || 0;

    for (const cveItem of cveItems) {
      const processedCveData = await cleanseCveData(cveItem);
      await CVE.findOneAndUpdate({ id: processedCveData.id }, processedCveData, { upsert: true });

    }

    console.log(
      `Fetched ${cveItems.length} CVEs (startIndex: ${startIndex})`
    );

    // if (startIndex + RESULTS_PER_PAGE < totalCount) {
      await new Promise((resolve) => setTimeout(resolve, 1000));
      await fetchCveDataChunked(startIndex + RESULTS_PER_PAGE);
    // } else {
      console.log("Fetched all CVE data and stored in database.");
    // }
  } catch (error) {
    console.error("Error fetching CVE data:", error.message);
  }
}

module.exports = { fetchCveDataChunked };
