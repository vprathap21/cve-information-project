async function cleanseCveData(cveItem) {
  const cleansedData = {
    id: cveItem?.cve?.id?.toString() || "",
    sourceIdentifier: cveItem?.cve?.sourceIdentifier,
    publishedDate: cveItem?.cve?.published
      ? new Date(cveItem?.cve?.published)
      : null,
    lastModifiedDate: cveItem?.cve?.lastModified
      ? new Date(cveItem?.cve?.lastModified)
      : null,
    vulnStatus: cveItem?.cve?.vulnStatus,
    description: cveItem?.cve?.descriptions?.[0]?.value?.trim() || "",

    configurations: cveItem?.cve?.configurations || [],
    metrics: {
      cvssV2: {
        cvssData: {
          vectorString:cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.vectorString || null,
          accessVector: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.accessVector ||null,
          accessComplexity: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.accessComplexity || null,
          authentication: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.authentication || null,
          confidentialityImpact: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.confidentialityImpact || null,
          integrityImpact: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.integrityImpact || null,
          availabilityImpact: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.availabilityImpact || null,
          baseScore: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.baseScore ||null,
          baseSeverity: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.baseSeverity || null,
          exploitabilityScore: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.exploitabilityScore ||null,
          impactScore: cveItem?.cve?.metrics?.cvssMetricV2?.[0]?.impactScore || null,
        },
      },
    },
  };

  return cleansedData;
}

module.exports = cleanseCveData;
