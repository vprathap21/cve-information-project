import React, { useState, useEffect } from 'react';

const PaginatedResults = ({ totalItems, itemsPerPage, onPageChange }) => {
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(Math.ceil(totalItems / itemsPerPage));
  const [data, setData] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      const response = await fetch(`/api/data?page=${currentPage}&limit=${itemsPerPage}`);
      const fetchedData = await response.json();
      setData(fetchedData);
      console.log(fetchedData);
      setTotalPages(Math.ceil(totalItems / itemsPerPage)); // Recalculate in case total changes on server
    };
    fetchData();
  }, [currentPage, itemsPerPage]); // Re-fetch on page change or itemsPerPage change

  const handlePageChange = (pageNumber) => {
    if (pageNumber > 0 && pageNumber <= totalPages) {
      setCurrentPage(pageNumber);
      onPageChange(pageNumber); // Call the callback function with the new page number
    }
  };

  const renderPages = () => {
    const pageNumbers = [];
    for (let i = 1; i <= totalPages; i++) {
      pageNumbers.push(
        <button
          key={i}
          className={`px-2 py-1 rounded-md text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${
            currentPage === i ? 'bg-blue-500 text-white font-bold' : ''
          }`}
          onClick={() => handlePageChange(i)}
        >
          {i}
        </button>
      );
    }
    return pageNumbers;
  };

  return (
    <div className="flex justify-center items-center mt-4">
      <button
        className={`px-2 py-1 rounded-md text-gray-700 hover:bg-gray-200 disabled:opacity-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${
          currentPage === 1 ? 'disabled' : ''
        }`}
        onClick={() => handlePageChange(currentPage - 1)}
        disabled={currentPage === 1}
      >
        Prev
      </button>
      {renderPages()}
      <button
        className={`px-2 py-1 rounded-md text-gray-700 hover:bg-gray-200 disabled:opacity-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${
          currentPage === totalPages ? 'disabled' : ''
        }`}
        onClick={() => handlePageChange(currentPage + 1)}
        disabled={currentPage === totalPages}
      >
        Next
      </button>
      {data.length > 0 && (
        <p className="text-gray-500 ml-4">Showing {data.length} of {totalItems} items</p>
      )}
    </div>
  );
};

export default PaginatedResults;
