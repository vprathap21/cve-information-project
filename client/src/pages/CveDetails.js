
import Scores from "../components/Scores";
import Metrics from "../components/Metrics";
import CpeTable from "../components/CpeTable";
import Description from "../components/Description";
import Metricetable from "../components/Metricetable";
import { useParams } from "react-router-dom";
import React, { useEffect, useState } from "react";

const CveDetails = () => {
  const { cveId } = useParams();
  const [cve, setCve] = useState(null);

  const fetchCve = async () => {
    try {
      const response = await fetch(`http://localhost:5001/api/cves/${cveId}`);
      const data = await response.json();

      setCve(data.cve);
    } catch (error) {
      console.error("Error fetching CVE data by ID:", error.message);
    }
  };

  useEffect(() => {
    fetchCve();
  }, );

  return (
    <div className="flex justify-center items-center h-screen w-1/2 mx-auto">
      {cve && (
        <div>
          <h2 className="font-bold text-2xl mb-2">CVE ID : {cve.id}</h2>
          <Description description={cve.description} />
           <Metrics metrics={cve.metrics.cvssV2} />
          {/* /<Metricetable data={cve.metrics.cvssMetricV2[0].cvssData} headings={["Access Vector", "Access Complexity", "Authentication","Confidentiality Impact", "Integrity Impact", "Availability Impact"]} />
          <Scores scores={cve.metrics.cvssMetricV2[0]} />
          <CpeTable cpeMatch={cve.configurations[0].nodes[0].cpeMatch} headings={["Criteria", "Match Criteria Id", "Vulnerable"]} /> */} 
        </div>
      )}
    </div>
  );
};

export default CveDetails;
