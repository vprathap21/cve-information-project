import React, { useState, useEffect } from "react";
import { fetchCves, fetchTotalCves } from "../utils/fetches";
import { AiOutlineSearch } from "react-icons/ai";
import { DatePicker, Input, Button, Pagination, Form, Select } from 'antd';
import 'antd/dist/reset.css'; // Import Ant Design styles

import CveTable from "../components/CveTable";

const { RangePicker } = DatePicker;
const { Option } = Select;

const CveList = () => {
  const [cves, setCves] = useState([]);
  const [totalRecords, setTotalRecords] = useState(0);
  const [resultsPerPage, setResultsPerPage] = useState(10);
  const [currentPage, setCurrentPage] = useState(1);
  const [filters, setFilters] = useState({
    publishedDate: "",
    modifiedDate: "",
    cveId: "",
  });

  useEffect(() => {
    fetchCvesData();
    fetchTotalCvesData();
  }, [resultsPerPage, currentPage, filters]);

  const fetchCvesData = async () => {
    try {
      const data = await fetchCves(currentPage, resultsPerPage, filters);
      setCves(data.results);
    } catch (error) {
      console.error("Error fetching CVEs:", error.message);
    }
  };

  const fetchTotalCvesData = async () => {
    try {
      const data = await fetchTotalCves();
      setTotalRecords(data);
    } catch (error) {
      console.error("Error fetching total CVEs:", error.message);
    }
  };

  const handlePageChange = (page, pageSize) => {
    setCurrentPage(page);
    setResultsPerPage(pageSize);
  };

  const handleFilterChange = (changedValues) => {
    setFilters({ ...filters, ...changedValues });
  };

  const handleSearch = () => {
    fetchCvesData();
  };

  const formatDate = (dateRange) => {
    return dateRange ? [dateRange[0].format("YYYY-MM-DD"), dateRange[1].format("YYYY-MM-DD")] : [];
  };

  const handleFormSubmit = (values) => {
    const { publishedDate, modifiedDate, cveId } = values;
    setFilters({
      publishedDate: formatDate(publishedDate),
      modifiedDate: formatDate(modifiedDate),
      cveId: cveId || "",
    });
    handleSearch();
  };

  return (
    <div className="container mx-auto px-4 py-10 bg-gray-100 min-h-screen">
      {/* Heading with custom typography */}
      <h1 className="text-5xl font-extrabold text-center text-indigo-800 mb-8" style={{ fontFamily: "'Poppins', sans-serif" }}>
      Comprehensive CVE List
      </h1>
      <p className="text-lg font-semibold text-gray-700 mb-6 text-left">
        Total Records: {totalRecords}
      </p>

      {/* Ant Design Filter Form */}
      <div className="bg-gray-50 p-6 rounded-lg shadow-lg mb-8">
        <h2 className="text-2xl font-semibold mb-4 text-indigo-600">Filter Options</h2>
        <Form
          layout="vertical"
          onFinish={handleFormSubmit}
        >
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            {/* Published Date Range Filter */}
            <Form.Item label="Published Date" name="publishedDate">
              <RangePicker className="w-full" />
            </Form.Item>

            {/* Last Modified Date Range Filter */}
            <Form.Item label="Last Modified Date" name="modifiedDate">
              <RangePicker className="w-full" />
            </Form.Item>

            {/* CVE ID Filter */}
            <Form.Item label="CVE ID" name="cveId">
              <Input placeholder="Enter CVE ID" />
            </Form.Item>
          </div>

          {/* Search Button */}
          <Button
            type="primary"
            icon={<AiOutlineSearch />}
            className="w-full md:w-auto mt-4 bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 text-white"
            htmlType="submit"
          >
            Apply Filter
          </Button>
        </Form>
      </div>

      {/* Table Section */}
      <div className="bg-gray-50 rounded-lg shadow-lg p-6 flex justify-center">
        <div className="w-full max-w-6xl">
          <CveTable cves={cves} />
        </div>
      </div>

      {/* Pagination and Results per Page */}
      <div className="flex justify-between items-center mt-6">
        <div className="flex items-center">
          <span className="mr-3 text-md font-semibold text-gray-600">Results Per Page:</span>
          <Select
            defaultValue={resultsPerPage}
            style={{ width: 120 }}
            onChange={setResultsPerPage}
          >
            <Option value={10}>10</Option>
            <Option value={50}>50</Option>
            <Option value={100}>100</Option>
          </Select>
        </div>
        <Pagination
          current={currentPage}
          total={totalRecords}
          pageSize={resultsPerPage}
          onChange={handlePageChange}
          showSizeChanger={false}
          showQuickJumper
          className="ml-auto"
        />
      </div>
    </div>
  );
};

export default CveList;
